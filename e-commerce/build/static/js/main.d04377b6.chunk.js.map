{"version":3,"sources":["reportWebVitals.js","redux/cart/cartTypes.js","redux/cart/cartActions.js","components/Product/Product.jsx","components/Main/Main.jsx","App.js","components/Cart/Cart.jsx","hooks/GetProducts.js","components/Container/Container.jsx","redux/cart/cardReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_TO_CART","REMOVE_FROM_CART","REMOVE_ALL","SET_PRODUCTS_TO_PAGE","addToCart","itemId","type","actionTypes","payload","id","connect","dispatch","productData","useDispatch","className","name","rating","onClick","Main","products","map","product","App","state","cart","removeFromCart","removeAll","item","length","index","quantity","alert","GetProducts","useState","setProducts","useEffect","fetch","response","ok","json","console","log","catch","err","setProductsToPage","cartItems","setCartItems","count","forEach","localStorage","setItem","JSON","stringify","to","exact","path","element","INITIAL_STATE","getItem","parse","cartReducer","action","itemAdd","find","prod","isInCartAdd","isInCartRem","itemRem","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6BCPDQ,EAAc,cACdC,EAAmB,mBACnBC,EAAa,aACbC,EAAuB,uBCDvBC,EAAY,SAACC,GACxB,MAAO,CACLC,KAAMC,EACNC,QAAS,CACPC,GAAIJ,K,OCcV,IAMeK,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLP,UAAW,SAACK,GAAD,OAAQE,EAASP,EAAUK,QAI3BC,EArBf,YAA8C,IAA3BE,EAA0B,EAA1BA,YAAaR,EAAa,EAAbA,UAG9B,OAFiBS,cAGf,sBAAKC,UAAU,cAAf,UACE,6BAAKF,EAAYH,KACjB,8BAAMG,EAAYG,OAClB,oCAAOH,EAAYI,UACnB,8BACE,wBAAQC,QAAS,kBAAMb,EAAUQ,EAAYH,KAA7C,iCCXO,SAASS,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,OACE,iCACE,mBAAGL,UAAU,WAAb,sBACA,qBAAKA,UAAU,UAAf,SACGK,EAASC,KAAI,SAACC,GACb,OAAO,cAAC,EAAD,CAA0BT,YAAaS,GAAzBA,EAAQZ,YCGxBa,MAVf,YAA4B,IAAbH,EAAY,EAAZA,SACb,OACE,qBAAKL,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAACI,EAAD,CAAMC,SAAUA,SCuDxB,IAceT,eAdS,SAACa,GACvB,MAAO,CACLC,KAAMD,EAAMC,KAAKA,SAIM,SAACb,GAC1B,MAAO,CACLP,UAAW,SAACK,GAAD,OAAQE,EAASP,EAAUK,KACtCgB,eAAgB,SAAChB,GAAD,OAAQE,EJ1DnB,CACLL,KAAMC,EACNC,QAAS,CACPC,GIuD8CA,MAChDiB,UAAW,kBAAMf,EJlDZ,CACLL,KAAMC,EACNC,QAAS,CACPmB,KAAM,UImDGjB,EAlEf,YAA+D,IAA/Cc,EAA8C,EAA9CA,KAAMpB,EAAwC,EAAxCA,UAAWqB,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,UAG/C,OAFiBb,cAGf,gCACE,oBAAIC,UAAU,aAAd,wBACA,uBACA,qBAAKA,UAAU,MAAf,SACmB,IAAhBU,EAAKI,QAAgB,oDAExB,qBAAKd,UAAU,MAAf,SACE,8BACGU,EAAKJ,KAAI,SAACO,EAAME,GACf,OACE,sBAAiBf,UAAU,aAA3B,UACE,8BAAMa,EAAKZ,OACX,gCACE,wBACEE,QAAS,kBAAMb,EAAUuB,EAAKlB,KAC9BK,UAAU,YAFZ,eAMA,wBACEG,QAAS,kBAAMQ,EAAeE,EAAKlB,KACnCK,UAAU,eAFZ,kBAOF,sBAAKA,UAAU,YAAf,UAA4Ba,EAAKG,SAAjC,UAhBQD,UAsBlB,qBAAKf,UAAU,MAAf,SACmB,IAAhBU,EAAKI,QACJ,qCACE,8BACE,wBAAQX,QAAS,kBAAMS,KAAvB,yBAEF,qBAAKZ,UAAU,MAAf,SACE,wBAAQG,QAAS,kBAAMc,MAAM,aAA7B,mCC7BCC,EArBK,WAClB,MAAgCC,mBAAS,IAAzC,mBAAOd,EAAP,KAAiBe,EAAjB,KAiBA,OAhBAC,qBAAU,WACRC,MAAM,yCACH1C,MAAK,SAAC2C,GACAA,EAASC,GAIdD,EAASE,OAAO7C,MAAK,SAAC2C,GACpBH,EAAYG,MAJZG,QAAQC,IAAI,gBAOfC,OAAM,SAACC,GACNH,QAAQC,IAAI,SAAUE,QAEzB,IAEI,CAACxB,EAAUe,ICkCpB,IAYexB,eAZS,SAACa,GACvB,MAAO,CACLC,KAAMD,EAAMC,KAAKA,SAIM,SAACb,GAC1B,MAAO,CACLiC,kBAAmB,SAACzB,GAAD,OAAcR,ENjCJ,SAACQ,GAChC,MAAO,CACLb,KAAMC,EACNC,QAAS,CACPmB,KAAMR,IM6BkCyB,CAAkBzB,QAIjDT,EAzDf,YAAiD,IAA5Bc,EAA2B,EAA3BA,KAAMoB,EAAqB,EAArBA,kBACzB,EAA8BZ,IAA9B,mBAAKb,EAAL,KACA,GADA,KACkCc,mBAAS,IAA3C,mBAAOY,EAAP,KAAkBC,EAAlB,KAYA,OAVAX,qBAAU,WACR,IAAIY,EAAQ,EACZvB,EAAKwB,SAAQ,SAACrB,GACZoB,GAASpB,EAAKG,YAEhBgB,EAAaC,GACbE,aAAaC,QAAQ,YAAaC,KAAKC,UAAU5B,MAChD,CAACA,EAAMqB,IACVD,EAAkBzB,GAGhB,cAAC,IAAD,UACE,mCACE,sBAAKL,UAAU,SAAf,UACE,8BACE,cAAC,IAAD,CAAMA,UAAU,QAAQuC,GAAG,IAA3B,6BAIF,8BACE,eAAC,IAAD,CAAMA,GAAG,QAAT,iBACO,IACL,wBAAQvC,UAAU,cAAlB,SACE,+BAAOU,EAAKI,mBAKpB,eAAC,IAAD,WACE,cAAC,IAAD,CACE0B,OAAK,EACLC,KAAK,IACLC,QAAS,cAAC,EAAD,CAAKrC,SAAUA,MAE1B,cAAC,IAAD,CAAOoC,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAMX,UAAWrB,iB,sBC7ClDiC,EAAgB,CACpBtC,SAAU,GACVK,KAAMyB,aAAaS,QAAQ,aACvBP,KAAKQ,MAAMV,aAAaS,QAAQ,cAChC,IAwDSE,EArDK,WAAoC,IAAnCrC,EAAkC,uDAA1BkC,EAAeI,EAAW,uCACrD,OAAQA,EAAOvD,MACb,KAAKC,EACH,OAAO,2BACFgB,GADL,IAEEJ,SAAU0C,EAAOrD,UAErB,KAAKD,EACH,IAAMuD,EAAUvC,EAAMJ,SAASQ,KAAKoC,MAClC,SAACC,GAAD,OAAUA,EAAKvD,KAAOoD,EAAOrD,QAAQC,MAEjCwD,EAAc1C,EAAMC,KAAKuC,MAAK,SAACpC,GAAD,OAClCA,EAAKlB,KAAOoD,EAAOrD,QAAQC,MAE7B,OAAO,2BACFc,GADL,IAEEC,KAAMyC,EACF1C,EAAMC,KAAKJ,KAAI,SAAC0C,GAAD,OACbA,EAAQrD,KAAOoD,EAAOrD,QAAQC,GAA9B,2BACSqD,GADT,IACkBhC,SAAUgC,EAAQhC,SAAW,IAC3CgC,KAJO,sBAMTvC,EAAMC,MANG,4BAMQsC,GANR,IAMiBhC,SAAU,QAEhD,KAAKvB,EACagB,EAAMJ,SAASQ,KAAKoC,MAClC,SAACC,GAAD,OAAUA,EAAKvD,KAAOoD,EAAOrD,QAAQC,MADvC,IAGMyD,EAAc3C,EAAMC,KAAKuC,MAAK,SAACI,GAAD,OAClCA,EAAQ1D,KAAOoD,EAAOrD,QAAQC,MAGhC,OAAO,2BACFc,GADL,IAEEC,KAC2B,IAAzB0C,EAAYpC,SACRP,EAAMC,KAAK4C,QAAO,SAACD,GAAD,OAAaA,EAAQ1D,KAAOoD,EAAOrD,QAAQC,MAC7Dc,EAAMC,KAAKJ,KAAI,SAAC+C,GAAD,OACbA,EAAQ1D,KAAOoD,EAAOrD,QAAQC,GAA9B,2BACS0D,GADT,IACkBrC,SAAUqC,EAAQrC,SAAW,IAC3CqC,OAGhB,KAAK5D,EACH,OAAO,2BACFgB,GADL,IAEEC,KAAM,KAEV,QACE,OAAOD,ICnDE8C,EAJKC,0BAAgB,CAChC9C,KAAMoC,I,QCEKW,EAFDC,sBAAYH,EAAaI,iCCOvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BvF,M","file":"static/js/main.d04377b6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const REMOVE_ALL = \"REMOVE_ALL\";\r\nexport const SET_PRODUCTS_TO_PAGE = \"SET_PRODUCTS_TO_PAGE\";\r\n","import * as actionTypes from \"./cartTypes\";\r\n\r\nexport const addToCart = (itemId) => {\r\n  return {\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      id: itemId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (itemId) => {\r\n  return {\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: {\r\n      id: itemId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeAll = () => {\r\n  return {\r\n    type: actionTypes.REMOVE_ALL,\r\n    payload: {\r\n      item: [],\r\n    },\r\n  };\r\n};\r\n\r\nexport const setProductsToPage = (products) => {\r\n  return {\r\n    type: actionTypes.SET_PRODUCTS_TO_PAGE,\r\n    payload: {\r\n      item: products,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/cart/cartActions\";\r\n\r\nfunction Product({ productData, addToCart }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"productItem\">\r\n      <h3>{productData.id}</h3>\r\n      <div>{productData.name}</div>\r\n      <div>${productData.rating}</div>\r\n      <div>\r\n        <button onClick={() => addToCart(productData.id)}>Add to Cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","import React from \"react\";\r\nimport Product from \"../Product/Product\";\r\n\r\nexport default function Main({ products }) {\r\n  return (\r\n    <main>\r\n      <p className=\"subtitle\">Products</p>\r\n      <div className=\"product\">\r\n        {products.map((product) => {\r\n          return <Product key={product.id} productData={product}></Product>;\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n","import Main from \"./components/Main/Main\";\r\n\r\nfunction App({ products }) {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"row\">\r\n        <Main products={products}></Main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  addToCart,\r\n  removeFromCart,\r\n  removeAll,\r\n} from \"../../redux/cart/cartActions\";\r\n\r\nfunction Cart({ cart, addToCart, removeFromCart, removeAll }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"textCenter\">Cart Items</h2>\r\n      <hr />\r\n      <div className=\"row\">\r\n        {cart.length === 0 && <div> Cart is Empty </div>}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div>\r\n          {cart.map((item, index) => {\r\n            return (\r\n              <div key={index} className=\"rowUpgrade\">\r\n                <div>{item.name}</div>\r\n                <div>\r\n                  <button\r\n                    onClick={() => addToCart(item.id)}\r\n                    className=\"buttonAdd\"\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    onClick={() => removeFromCart(item.id)}\r\n                    className=\"buttonRemove\"\r\n                  >\r\n                    -\r\n                  </button>\r\n                </div>\r\n                <div className=\"textRight\">{item.quantity} x</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        {cart.length !== 0 && (\r\n          <>\r\n            <div>\r\n              <button onClick={() => removeAll()}>Clear all</button>\r\n            </div>\r\n            <div className=\"row\">\r\n              <button onClick={() => alert(\"Checkout\")}>Checkout</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart.cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (id) => dispatch(addToCart(id)),\r\n    removeFromCart: (id) => dispatch(removeFromCart(id)),\r\n    removeAll: () => dispatch(removeAll()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst GetProducts = () => {\r\n  const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://retoolapi.dev/3scGq6/products\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          console.log(\"no result\");\r\n          return;\r\n        }\r\n        response.json().then((response) => {\r\n          setProducts(response);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error:\", err);\r\n      });\r\n  }, []);\r\n\r\n  return [products, setProducts];\r\n};\r\n\r\nexport default GetProducts;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport Cart from \"../Cart/Cart\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GetProducts from \"../../hooks/GetProducts\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProductsToPage } from \"../../redux/cart/cartActions\";\r\n\r\nfunction Container({ cart, setProductsToPage }) {\r\n  let [products, setProducts] = GetProducts();\r\n  const [cartItems, setCartItems] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    cart.forEach((item) => {\r\n      count += item.quantity;\r\n    });\r\n    setCartItems(count);\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cart));\r\n  }, [cart, cartItems]);\r\n  setProductsToPage(products);\r\n\r\n  return (\r\n    <Router>\r\n      <header>\r\n        <div className=\"header\">\r\n          <div>\r\n            <Link className=\"title\" to=\"/\">\r\n              Shopping Cart\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <Link to=\"/cart\">\r\n              Cart{\" \"}\r\n              <button className=\"buttonBadge\">\r\n                <span>{cart.length}</span>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <Routes>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            element={<App products={products}></App>}\r\n          ></Route>\r\n          <Route path=\"/cart\" element={<Cart cartItems={cart} />}></Route>\r\n        </Routes>\r\n      </header>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cart.cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setProductsToPage: (products) => dispatch(setProductsToPage(products)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\r\n","import * as actionTypes from \"./cartTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  products: [],\r\n  cart: localStorage.getItem(\"cartItems\")\r\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n    : [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PRODUCTS_TO_PAGE:\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    case actionTypes.ADD_TO_CART:\r\n      const itemAdd = state.products.item.find(\r\n        (prod) => prod.id === action.payload.id\r\n      );\r\n      const isInCartAdd = state.cart.find((item) =>\r\n        item.id === action.payload.id ? true : false\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: isInCartAdd\r\n          ? state.cart.map((itemAdd) =>\r\n              itemAdd.id === action.payload.id\r\n                ? { ...itemAdd, quantity: itemAdd.quantity + 1 }\r\n                : itemAdd\r\n            )\r\n          : [...state.cart, { ...itemAdd, quantity: 1 }],\r\n      };\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      const itemRem = state.products.item.find(\r\n        (prod) => prod.id === action.payload.id\r\n      );\r\n      const isInCartRem = state.cart.find((itemRem) =>\r\n        itemRem.id === action.payload.id ? true : false\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        cart:\r\n          isInCartRem.quantity === 1\r\n            ? state.cart.filter((itemRem) => itemRem.id !== action.payload.id)\r\n            : state.cart.map((itemRem) =>\r\n                itemRem.id === action.payload.id\r\n                  ? { ...itemRem, quantity: itemRem.quantity - 1 }\r\n                  : itemRem\r\n              ),\r\n      };\r\n    case actionTypes.REMOVE_ALL:\r\n      return {\r\n        ...state,\r\n        cart: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from './cart/cardReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    cart: cartReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Container from \"./components/Container/Container\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport store from \"./redux/store\";\r\n\r\n// const store = createStore(cartReducer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Container />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}